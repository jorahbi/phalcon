<?php

namespace Admin\Entity;

/**
 * Subordinate
 * 
 * @package Admin\Entity
 * @autogenerated by Phalcon Developer Tools
 * @date 2018-07-13, 12:16:49
 */
abstract class Subordinate extends AbstractEntity
{

    /**
     *
     * @var integer
     * @Primary
     * @Identity
     * @Column(column="id", type="integer", length=11, nullable=false)
     */
    protected $id;

    /**
     *
     * @var integer
     * @Column(column="promoters_id", type="integer", length=11, nullable=true)
     */
    protected $promotersId;

    /**
     *
     * @var integer
     * @Column(column="divided_proportion", type="integer", length=2, nullable=true)
     */
    protected $dividedProportion;

    /**
     *
     * @var string
     * @Column(column="extension_code", type="string", length=32, nullable=true)
     */
    protected $extensionCode;

    /**
     *
     * @var integer
     * @Column(column="active", type="integer", length=1, nullable=true)
     */
    protected $active;

    /**
     *
     * @var string
     * @Column(column="create", type="string", nullable=true)
     */
    protected $create;

    /**
     * Method to set the value of field id
     *
     * @param integer $id
     * @return $this
     */
    public function setId($id)
    {
        $this->id = $id;

        return $this;
    }

    /**
     * Method to set the value of field promotersId
     *
     * @param integer $promotersId
     * @return $this
     */
    public function setPromotersId($promotersId)
    {
        $this->promotersId = $promotersId;

        return $this;
    }

    /**
     * Method to set the value of field dividedProportion
     *
     * @param integer $dividedProportion
     * @return $this
     */
    public function setDividedProportion($dividedProportion)
    {
        $this->dividedProportion = $dividedProportion;

        return $this;
    }

    /**
     * Method to set the value of field extensionCode
     *
     * @param string $extensionCode
     * @return $this
     */
    public function setExtensionCode($extensionCode)
    {
        $this->extensionCode = $extensionCode;

        return $this;
    }

    /**
     * Method to set the value of field active
     *
     * @param integer $active
     * @return $this
     */
    public function setActive($active)
    {
        $this->active = $active;

        return $this;
    }

    /**
     * Method to set the value of field create
     *
     * @param string $create
     * @return $this
     */
    public function setCreate($create)
    {
        $this->create = $create;

        return $this;
    }

    /**
     * Returns the value of field id
     *
     * @return integer
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Returns the value of field promotersId
     *
     * @return integer
     */
    public function getPromotersId()
    {
        return $this->promotersId;
    }

    /**
     * Returns the value of field dividedProportion
     *
     * @return integer
     */
    public function getDividedProportion()
    {
        return $this->dividedProportion;
    }

    /**
     * Returns the value of field extensionCode
     *
     * @return string
     */
    public function getExtensionCode()
    {
        return $this->extensionCode;
    }

    /**
     * Returns the value of field active
     *
     * @return integer
     */
    public function getActive()
    {
        return $this->active;
    }

    /**
     * Returns the value of field create
     *
     * @return string
     */
    public function getCreate()
    {
        return $this->create;
    }

    /**
     * Initialize method for model.
     */
    public function initialize()
    {
        $this->setSchema("promoters");
        $this->setSource("subordinate");
    }

    /**
     * Returns table name mapped in the model.
     *
     * @return string
     */
    public function getSource()
    {
        return 'subordinate';
    }

    /**
     * Allows to query a set of records that match the specified conditions
     *
     * @param mixed $parameters
     * @return Subordinate[]|Subordinate|\Phalcon\Mvc\Model\ResultSetInterface
     */
    public static function find($parameters = null)
    {
        return parent::find($parameters);
    }

    /**
     * Allows to query the first record that match the specified conditions
     *
     * @param mixed $parameters
     * @return Subordinate|\Phalcon\Mvc\Model\ResultInterface
     */
    public static function findFirst($parameters = null)
    {
        return parent::findFirst($parameters);
    }

}
